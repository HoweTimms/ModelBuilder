import com.fairisaac.mb.common.util.DateUtil

Dataset ds1 = app.data.open(source: '../../../data/DataProcessing/OutOfTime_App_Perf_Data_Chars.mbd')



Dataset ds2= app.data.create('../../../data/DataProcessing/OutOfTime_App_Perf_Data_Excl.mbd',true)
for (Record rec in ds1) {

//Date of birth missing

rec.Exclusion_Missing_DOB =0
if (rec.AGE_OF_APPLICANT <= 0) rec.Exclusion_Missing_DOB =1

// Age less than 18

rec.Exclusion_AgeLT18 =0
if (rec.AGE_OF_APPLICANT <18 && rec.AGE_OF_APPLICANT >0) {rec.Exclusion_AgeLT18 =1}

// DECEASED
rec.Exclusion_Deceased=0
if (rec.Deceased_Ind =='Deceased') {rec.Exclusion_Deceased=1}

// ACCEPTED WITHOUT PERFORMANCE

rec.Exclusion_Accept_Without_Performance = 0
//Check whether there is a performance month populated
HasPerformance1 = 0
for (i=1; i<31; i++){
    if (rec["DELQ" + i] >=0 ) HasPerformance1 = 1 
}
//Where HasPerformance1 is not 1 then there is no perf data
//Also check the merge flag using AcctOpen_Ind
if(rec.FINAL_STATUS =='Accept' && (HasPerformance1 !=1 || rec.AcctOpen_Ind !=1)) Exclusion_Accept_Without_Performance =1


if (rec.Exclusion_Missing_DOB > 0) rec.Exclusion = 1
else if (rec.Exclusion_AgeLT18 > 0) rec.Exclusion = 2
else if (rec.Exclusion_Deceased > 0) rec.Exclusion = 3
else if (rec.Exclusion_Accept_Without_Performance > 0) rec.Exclusion = 4
else rec.Exclusion = 0


   
    ds2.add(rec)    
}
ds2.save()